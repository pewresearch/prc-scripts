{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@prc/functions/webpack/bootstrap","webpack://@prc/functions/webpack/runtime/compat get default export","webpack://@prc/functions/webpack/runtime/define property getters","webpack://@prc/functions/webpack/runtime/hasOwnProperty shorthand","webpack://@prc/functions/external window [\"wp\",\"apiFetch\"]","webpack://@prc/functions/external window [\"wp\",\"url\"]","webpack://@prc/functions/./functions.js","webpack://@prc/functions/./index.js","webpack://@prc/functions/external window [\"wp\",\"coreData\"]"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/* eslint-disable max-lines */\n/**\n * WordPress Dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { getEntityRecord } from '@wordpress/core-data';\n\n// @TODO make our mailchimp api have an endpoint to return these values from the db. also build an interface to manage them.\nconst mailChimpInterests = [\n\t{\n\t\tlabel: 'Weekly roundup of all new publications',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'Quarterly update from the president',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: '--',\n\t\tvalue: false,\n\t},\n\t{\n\t\tlabel: 'Global attitudes & trends (twice a month)',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'Internet, science & tech (monthly)',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'Daily briefing of media news',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'Race & ethnicity (monthly)',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'Religion & public life - Weekly newsletter',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'Religion & public life - Daily religion headlines',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'Social & demographic trends (monthly)',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'Methodological research (quarterly)',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: 'U.S. politics & policy (monthly)',\n\t\tvalue: 'xyz',\n\t},\n\t{\n\t\tlabel: '--',\n\t\tvalue: false,\n\t},\n\t{\n\t\tlabel: 'SELECT ALL',\n\t\tvalue: 'select-all',\n\t},\n\t{\n\t\tlabel: '--',\n\t\tvalue: false,\n\t},\n\t{\n\t\tlabel: 'Mini-course - U.S. Immigration',\n\t\tvalue: 'xxx',\n\t},\n\t{\n\t\tlabel: 'Mini-course - U.S. Census',\n\t\tvalue: 'xxxx',\n\t},\n\t{\n\t\tlabel: 'Mini-course - Muslims and Islam',\n\t\tvalue: 'xxxxx',\n\t},\n];\n\nfunction ifMatchSetAttribute(\n\tneedle,\n\thaystack,\n\tattrKey,\n\tattrValue,\n\tsetAttributes\n) {\n\tif (needle === haystack) {\n\t\tsetAttributes({ [attrKey]: attrValue });\n\t}\n}\n\nfunction randomId() {\n\t// Math.random should be unique because of its seeding algorithm.\n\t// Convert it to base 36 (numbers + letters), and grab the first 9 characters\n\t// after the decimal.\n\treturn `_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction getTermsByLetter(taxonomy, letter) {\n\treturn new Promise((resolve) => {\n\t\tapiFetch({\n\t\t\tpath: `/prc-api/v2/blocks/helpers/get-taxonomy-by-letter/?taxonomy=${taxonomy}&letter=${letter}`,\n\t\t}).then((terms) => {\n\t\t\tresolve(terms);\n\t\t});\n\t});\n}\n\nfunction getTerms(taxonomy, perPage = 25) {\n\treturn new Promise((resolve) => {\n\t\tconst data = {};\n\t\tapiFetch({\n\t\t\tpath: `/wp/v2/${taxonomy}?per_page=${perPage}`,\n\t\t}).then((terms) => {\n\t\t\tfor (let index = 0; index < terms.length; index++) {\n\t\t\t\tconst slug = terms[index].slug.replace(\n\t\t\t\t\t`${taxonomy.toLowerCase()}_`,\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t\t\tdata[terms[index].id] = {\n\t\t\t\t\tid: terms[index].id,\n\t\t\t\t\tname: terms[index].name,\n\t\t\t\t\tparent: terms[index].parent,\n\t\t\t\t\tslug,\n\t\t\t\t};\n\t\t\t}\n\t\t\tresolve(data);\n\t\t});\n\t});\n}\n\nfunction getTermsAsOptions(\n\ttaxonomy,\n\tperPage,\n\ttermValue = 'slug',\n\tsortByLabel = true\n) {\n\treturn new Promise((resolve) => {\n\t\tgetTerms(taxonomy, perPage).then((data) => {\n\t\t\tconst labelOptions = [];\n\n\t\t\tObject.keys(data).forEach((key) => {\n\t\t\t\tconst termObj = data[key];\n\n\t\t\t\tconst value = termObj[termValue];\n\n\t\t\t\tlet label = termObj.name;\n\t\t\t\tif (undefined !== termObj.parent && 0 !== termObj.parent) {\n\t\t\t\t\tlabel = ` -- ${label}`;\n\t\t\t\t}\n\n\t\t\t\tlabelOptions.push({\n\t\t\t\t\tvalue,\n\t\t\t\t\tlabel,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (false !== sortByLabel) {\n\t\t\t\tlabelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n\t\t\t}\n\n\t\t\tresolve(labelOptions);\n\t\t});\n\t});\n}\n\nfunction getTermsAsTree(taxonomy) {\n\treturn new Promise((resolve) => {\n\t\tgetTerms(taxonomy).then((data) => {\n\t\t\tconst treeData = [];\n\t\t\t// Convert data from object of objects to array of objects.\n\t\t\tconst convertedData = Object.keys(data).map((i) => data[i]);\n\t\t\t// Filter out the parent terms first\n\t\t\tconst parentTerms = convertedData.filter((e) => 0 === e.parent);\n\t\t\tparentTerms.forEach((e) => {\n\t\t\t\t// Get children by filtering for terms with parent matching this id in loop.\n\t\t\t\tconst c = convertedData.filter((f) => f.parent === e.id);\n\t\t\t\tconst children = [];\n\t\t\t\t// Construct children array.\n\t\t\t\tc.forEach((cT) => {\n\t\t\t\t\tchildren.push({\n\t\t\t\t\t\tname: cT.name,\n\t\t\t\t\t\tid: cT.id,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t// Finally, push the fully structured parent -> child relationship to the tree data.\n\t\t\t\ttreeData.push({\n\t\t\t\t\tname: e.name,\n\t\t\t\t\tid: e.id,\n\t\t\t\t\tchildren,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tresolve(treeData);\n\t\t});\n\t});\n}\n\n// convert an html table into a flat array of arrays\nfunction tableToArray(table) {\n\tconst rows = table.querySelectorAll('tr');\n\tconst data = [];\n\tfor (let i = 0; i < rows.length; i += 1) {\n\t\tconst row = rows[i];\n\t\tconst cols = row.querySelectorAll('td, th');\n\t\tconst rowData = [];\n\t\tfor (let j = 0; j < cols.length; j += 1) {\n\t\t\tconst col = cols[j];\n\t\t\trowData.push(col.innerText);\n\t\t}\n\t\tdata.push(rowData);\n\t}\n\treturn data;\n}\n\n// cnovert array of arrays to formatted csv, with optional metadata\nfunction arrayToCSV(objArray, metadata) {\n\tif (undefined === objArray || objArray.length === 0) return false;\n\tconst array =\n\t\t'object' !== typeof objArray ? JSON.parse(objArray) : objArray;\n\tconst checkIfEmpty = (str) => (str !== undefined ? str : '');\n\tlet str = '';\n\tif (undefined !== metadata) {\n\t\tstr += `${checkIfEmpty(metadata.title)}\n\t\t\t${checkIfEmpty(metadata.subtitle)}\n\n\t\t\t`;\n\t}\n\n\tfor (let i = 0; i < array.length; i += 1) {\n\t\tlet line = '';\n\t\t// if a value has a comma in it, wrap it in quotes\n\t\tfor (let j = 0; j < array[i].length; j += 1) {\n\t\t\tif (j > 0) line += ',';\n\t\t\tif (array[i][j].indexOf(',') > -1) {\n\t\t\t\tline += `\"${array[i][j]}\"`;\n\t\t\t} else {\n\t\t\t\tline += array[i][j];\n\t\t\t}\n\t\t}\n\n\t\tstr += `${line}\n\t\t`;\n\t}\n\tif (undefined !== metadata) {\n\t\tstr += `\n\t\t${checkIfEmpty(metadata.note)}\n\t\t${checkIfEmpty(metadata.source)}\n\t\t${checkIfEmpty(metadata.tag)}`;\n\t}\n\treturn str;\n}\n\nfunction wpRestApiTermsToTree(terms, restrictTo = []) {\n\tconsole.log('wpRestApiTermsToTree', terms, restrictTo);\n\tconst getTopLevel = (termId) => {\n\t\tconst term = terms.find((t) => t.id === termId);\n\t\tif (0 === term.parent) {\n\t\t\treturn term;\n\t\t}\n\t\treturn getTopLevel(term.parent, terms);\n\t};\n\n\tconst treeData = [];\n\tif (!terms) {\n\t\treturn treeData;\n\t}\n\t// Convert data from object of objects to array of objects.\n\tconst convertedData = Object.keys(terms).map((i) => terms[i]);\n\t// Filter out the parent terms first\n\tconst parentTerms = convertedData.filter((e) => 0 === e.parent);\n\tparentTerms.forEach((e) => {\n\t\t// Get children by filtering for terms with parent matching this id in loop.\n\t\tconst c = convertedData.filter((f) => f.parent === e.id);\n\t\tconst children = [];\n\t\t// Construct children array.\n\t\tc.forEach((cT) => {\n\t\t\tchildren.push({\n\t\t\t\tname: cT.name,\n\t\t\t\tid: cT.id,\n\t\t\t\tmeta: cT.meta,\n\t\t\t});\n\t\t});\n\t\t// sort children by name\n\t\tchildren.sort((a, b) => (a.name > b.name ? 1 : -1));\n\t\t// Finally, push the fully structured parent -> child relationship to the tree data.\n\t\ttreeData.push({\n\t\t\tname: e.name,\n\t\t\tid: e.id,\n\t\t\tmeta: e.meta,\n\t\t\tchildren,\n\t\t});\n\t});\n\n\tlet r = treeData;\n\n\tif (0 < restrictTo.length) {\n\t\tconst restrictedTreeData = [];\n\t\trestrictTo.forEach((termId) => {\n\t\t\tconst topLevel = getTopLevel(termId);\n\t\t\tconst topLevelIndex = treeData.findIndex(\n\t\t\t\t(t) => t.id === topLevel.id\n\t\t\t);\n\t\t\trestrictedTreeData.push(treeData[topLevelIndex]);\n\t\t});\n\t\tr = restrictedTreeData;\n\t}\n\n\treturn r;\n}\n\nasync function getPostByUrl(url) {\n\ttry {\n\t\tconst resp = await apiFetch({\n\t\t\tpath: addQueryArgs('/prc-api/v3/utils/postid-by-url', {\n\t\t\t\turl,\n\t\t\t}),\n\t\t\tmethod: 'GET',\n\t\t});\n\t\tconst type = 'post' === resp?.postType ? 'posts' : resp?.postType;\n\t\tconst postSearchPath = addQueryArgs(`/wp/v2/${type}/${resp?.postId}`, {\n\t\t\tcontext: 'view',\n\t\t});\n\t\tconsole.log('postSearchPath', postSearchPath);\n\t\tconst post = await apiFetch({\n\t\t\tpath: postSearchPath,\n\t\t\tmethod: 'GET',\n\t\t});\n\t\tconsole.log('GOT THE POST', post);\n\t\treturn post;\n\t} catch (err) {\n\t\tthrow err;\n\t}\n}\n\nexport {\n\tgetTerms,\n\tgetTermsByLetter,\n\tgetTermsAsOptions,\n\tgetTermsAsTree,\n\tifMatchSetAttribute,\n\trandomId,\n\tmailChimpInterests,\n\ttableToArray,\n\tarrayToCSV,\n\twpRestApiTermsToTree,\n\tgetPostByUrl,\n};\n","import {\n\tgetTerms,\n\tgetTermsByLetter,\n\tgetTermsAsOptions,\n\tgetTermsAsTree,\n\tifMatchSetAttribute,\n\trandomId,\n\tmailChimpInterests,\n\tarrayToCSV,\n\ttableToArray,\n\twpRestApiTermsToTree,\n\tgetPostByUrl,\n} from './functions';\n\nfunction loadScript(slug, script) {\n\tif (!window.prcFunctions[slug]) {\n\t\twindow.prcFunctions[slug] = script;\n\t}\n}\n\nwindow.prcFunctions = {};\n\nloadScript('getTerms', getTerms);\nloadScript('getTermsByLetter', getTermsByLetter);\nloadScript('getTermsAsOptions', getTermsAsOptions);\nloadScript('getTermsAsTree', getTermsAsTree);\nloadScript('ifMatchSetAttribute', ifMatchSetAttribute);\nloadScript('randomId', randomId);\nloadScript('mailChimpInterests', mailChimpInterests);\nloadScript('arrayToCSV', arrayToCSV);\nloadScript('tableToArray', tableToArray);\nloadScript('wpRestApiTermsToTree', wpRestApiTermsToTree);\nloadScript('getPostByUrl', getPostByUrl);\n\nconsole.log('Loading @prc/functions...', window.prcFunctions);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","getTerms","taxonomy","perPage","Promise","resolve","data","apiFetch","path","then","terms","index","length","slug","replace","toLowerCase","id","name","parent","loadScript","script","prcFunctions","letter","termValue","sortByLabel","labelOptions","keys","forEach","termObj","value","label","undefined","push","sort","b","treeData","convertedData","map","i","filter","e","c","f","children","cT","needle","haystack","attrKey","attrValue","setAttributes","Math","random","toString","substr","objArray","metadata","array","JSON","parse","checkIfEmpty","str","title","subtitle","line","j","indexOf","note","source","tag","table","rows","querySelectorAll","cols","rowData","col","innerText","restrictTo","console","log","getTopLevel","termId","term","find","t","meta","r","restrictedTreeData","topLevel","topLevelIndex","findIndex","async","url","resp","addQueryArgs","method","type","postType","postSearchPath","postId","context","post","err"],"sourceRoot":""}